<?phpclass UsersController extends AppController {	var $uses = array('User','Course','Booking','TransactionLog');	var $components = array('Auth', 'Session', 'Email', 'RequestHandler');	function beforeFilter() {		$this->Auth->allow('register','logout','checkEmail','resetPassword','setForgotPassword');	}	function admin_login() {		$this->layout = 'admin_layout';		if (!empty($this->request->data)) {		   //pr($this->Auth->password( $this->request->data['User']['password']));die;			if ($this->Auth->login()) {				//pr($_SESSION);exit;				if ($_SESSION['Auth']['User']['user_type'] == "admin") {					$this->redirect(array('controller' => 'users', 'action' => 'admin_dashboard'));				}			} else {				$this->Session->setFlash("<font size='3' color='red'>please enter valid email_id and password </font>");			}		}	}	function admin_logout() {		if ($this->Auth->logout()) {			$this->redirect(array("controller" => 'users', "action" => "admin_login"));		}	}	function admin_dashboard() {		$this->layout = 'admin';		$count = $this->User->find('count', array('conditions' => array('User.user_type !=' => 'admin')));		$order = array('User.id'=>'DESC');		$user = $this->User->find('all', array('conditions' => array('User.user_type !=' => 'admin'),array(			'order' => $order,			'limit' => 4		)));		$course = $this->Course->find('count');		$order = array('Course.id'=>'DESC');		  $this->paginate = array(			'order' => $order,			'limit' => 4		);		$courseList = $this->paginate('Course');		$bookcount = $this->TransactionLog->find('count',array('conditions' => array('TransactionLog.status' => 'success')));				$order = array('TransactionLog.id'=>'DESC');		  $this->paginate = array(			'order' => $order,			'limit' => 4		);		$booking = $this->paginate('TransactionLog');				$this->set(compact('count','course','user','courseList','booking','bookcount'));			}	function admin_userListing($value = NULL, $value1 = NULL) {		$this->layout = 'admin';		@$name = $this->data['name'];		$this->Session->write('name', $name);		@$email = $this->data['email_id'];		$this->Session->write('email_id', $email);		$order = array('User.id' => 'DESC');		$conditions = array();		$conditions[] = array('User.user_type !=' => 'admin');		if ($name != "") {			$conditions[] = array('user LIKE' => "%" . $name . "%", 'User.user_type !=' => 'admin');		}		if ($email != "") {			$conditions[] = array('User.email_id' => $email, 'User.user_type !=' => 'admin');		}		if (!empty($value) && !empty($value1)) {			$order = array('User.' . $value => $value1);		} else {			$order = array('User.id' => 'DESC');		}		//pr($order);die;		$this->paginate = array(			'order' => $order,			'conditions' => $conditions,			'limit' => 10		);		$userList = $this->paginate('User');		$count = $this->User->find('count', array('conditions' => array('User.user_type !=' => 'admin')));		//pr($count); die;		$this->set(compact('userList', 'value', 'count'));	}	function admin_active($id = NULL) {		if ($this->User->updateAll(array('User.is_active' => 0), array('User.id' => $id))) {			$this->Session->setFlash('User has been deactivated');			$this->redirect(array('controller' => 'Users', 'action' => 'admin_userListing'));		}	}	function admin_deactive($id = NULL) {		if ($this->User->updateAll(array('User.is_active' => 1), array('User.id' => $id))) {			$this->Session->setFlash('User has been activated');			$this->redirect(array('controller' => 'Users', 'action' => 'admin_userListing'));		}	}	function admin_changePassword() {		$this->layout = 'admin';		$user_id = $this->Auth->user('id');		if (!empty($this->request->data)) {			$oldpassword = $this->Auth->password($this->request->data['User']['old_password']);			$newpassword = $this->request->data['User']['new_password'];			$count = $this->User->find('count', array(				'conditions' => array(					'User.password' => $oldpassword,					'User.id' => $user_id				)			));			if ($count > 0) {				$datapass['User']['password'] = $this->Auth->password($newpassword);				$this->User->id = $user_id;				$this->User->save($datapass);				$this->Session->setFlash('You have successfully changed your password.');				$this->redirect(array('controller' => 'users', 'action' => 'admin_changePassword'));			} else {				$this->Session->setFlash('Please enter correct old password.');			}		}	}	function admin_viewUser($id = NULL) {		$this->layout = "admin";		$userDetail = $this->User->find('first', array('conditions' => array('User.id' => $id)));		//pr($userDetail);exit;		$this->set(compact('userDetail'));	}	function admin_deleteUser($id = NULL) {		$this->autoRender = FALSE;		if ($this->User->delete($id)) {			$this->Session->setFlash('You have successfully deleted user');			$this->redirect(array('controller' => 'users', 'action' => 'admin_userListing'));		}	}	function register(){		 $this->autoRender = false;		//pr($this->request->data);exit;		if (!empty($this->request->data)) {			//pr($this->request->data);exit;			$this->request->data['User']['first_name'] = $this->request->data['User']['first_name'];			$this->request->data['User']['last_name'] = $this->request->data['User']['last_name'];			$this->request->data['User']['email_id'] = $this->request->data['User']['email_id'];			$this->request->data['User']['username'] = $this->request->data['User']['email_id'];			$this->request->data['User']['phone'] = $this->request->data['User']['phone'];			$this->request->data['User']['address'] = $this->request->data['User']['address'];			$this->request->data['User']['user_type'] = 'User';			$this->request->data['User']['password'] = $this->Auth->password($this->request->data['User']['password']);		}		  $name = $this->request->data['User']['first_name'] . " " . $this->data['User']['last_name'];			$email = $this->request->data['User']['email_id'];			$subject = "Techno CTA  Registration mail";			$message = 'Thanks For Registration.';			App::import('Vendor', 'phpmailer', array(				'file' => 'phpmailer/class.phpmailer.php'));			$message = $message;			$to = 'geeteshwari.sds@gmail.com';			$mail = new PHPMailer();			$mail->IsHTML(true);			$mail->SetFrom($to, 'Techno CTA');			$mail->AddReplyTo($to, "Techno CTA");			$mail->Subject = $subject;			$mail->Body = $message;			$mail->AddAddress(trim($email));			if (!$mail->Send()) {				echo $mail->ErrorInfo;				$this->Session->setFlash('Mail Not Sent');			} else {				$resultnew = "1";				if ($this->User->save($this->data)) {					$this->Session->setFlash('Thank you for registration.');					$this->redirect(array('controller' => 'homes', 'action' => 'index'));				}			}	}		function login() {		$this->autoRender = false;		$username =  $this->request->data['User']['email_id'];		$password =  $this->Auth->password($this->request->data['User']['password']);		$userDetail = $this->User->find('first', array('conditions' => array('User.username' => $username, 'User.user_type' => "user" ,'User.password'=>$password)));		if (!empty($this->request->data)) {			if($userDetail['User']['is_active'] == 0 && $userDetail['User']['user_type'] == "User"){				$this->Session->setFlash("<script>alert('Account is not activated yet!');</script>");				$this->redirect(array('controller' => 'homes', 'action' => 'index'));			}else{				if ($userDetail['User']['is_active'] == 1 && $userDetail['User']['user_type'] == "User") {					if ($this->Auth->login($userDetail['User'])) {						$this->Session->setFlash("<script>alert('You have successfully logged in');</script>");						$this->redirect(array('controller' => 'homes', 'action' => 'index'));					} else {						echo 0;						exit;					}				} else {					$this->Session->setFlash("<script>alert('Please enter valid Email and Password');</script>");					$this->redirect(array('controller' => 'homes', 'action' => 'index'));				}			}		}	}	 function checkEmail(){		$this->autoRender = false;		$email = $this->request->data['User']['email_id'];		$count = $this->User->find('count', array('conditions' => array('User.email_id' => $email, 'User.user_type' => 'User')));		if ($count == 0) {			echo "true";			exit;		} else {			echo "false";			exit;		}	}		 function logout() {		if ($this->Auth->logout()) {			$this->Session->setFlash("<script>alert('You have successfully logged out');</script>");		   $this->redirect(array("controller" => 'homes', "action" => "index"));		}	}	  function resetPassword() {		$email = $this->request->data['email_id'];		//pr($email);exit;		$userCount = $this->User->find('count', array(			'conditions' => array(				'User.email_id' => $email			)		));		if ($userCount == 0) {			$this->Session->setFlash('Please enter correct email id.', 'default', array('class' => 'errormessage'));			$this->redirect($this->referer());		} else {			$userinfo = $this->User->find('first', array('conditions' => array('User.email_id' => $email)));			$Name = $userinfo['User']['first_name'] . "" . $userinfo['User']['last_name'];		}		 $forgotRandStr = $this->getrandomstr();		$from = $email;		$subject = "Password Request";		App::import('Vendor', 'phpmailer', array(			'file' => 'phpmailer/class.phpmailer.php'));		$message = "<p>Dear '" . $Name . "',				 </p>				 <p>Please<a href=" . SITEPATH . "users/setForgotPassword" . "/" . $forgotRandStr . ">Click Here</a> to Change your Password  </p>				 <p>For any assistance or queries you can contact support@technocta.com  </p>				 <p>Regards,  </p>				 <p>Techno CTA Team</p>";		$to = 'geeteshwari.sds@gmail.com';		$mail = new PHPMailer();		$mail->IsHTML(true);		$mail->SetFrom($to, 'Techno CTA Team');		$mail->AddReplyTo($to, "Techno CTA Team");		$mail->Subject = $subject;		$mail->Body = $message;		$mail->AddAddress(trim($email));		if (!$mail->Send()) {			echo $mail->ErrorInfo;		} else {			$resultnew = "1";		}		if ($resultnew) {			$userDetails = $this->User->find('first', array(				'conditions' => array(					'User.email_id' => $email				)			));			$datafor['User']['forgot_str'] = $forgotRandStr;			$this->User->id = $userDetails['User']['id'];			$this->User->save($datafor);			echo 1;			exit;		} else {			echo 2;			exit;		}		if ($mail->Send()) {					$this->Session->setFlash('Thank you for contacting us ','default',array('class'=>'success'));					}	}	function setForgotPassword($forgotRandStr = NULL) {		 $this->layout = "Home";		$userDetails = $this->User->find('first', array(			'conditions' => array(				'User.forgot_str' => $forgotRandStr			)		));		$this->set(compact('userDetails'));		//pr($userDetails); die;		if (!empty($this->request->data)) {			$pass = $this->Auth->password($this->request->data['User']['password']);			//pr($pass);exit;			$id = $this->request->data['User']['id'];			//pr($id);exit;			$rand = "";			$updated = $this->User->updateAll(array('User.password' => "'$pass'"), array('User.id' => $id));		   //pr($updated);exit;			if ($updated) {				$this->Session->setFlash('You Have Successfully Changed your password', 'default', array('class' => 'success'));				$this->redirect(array('controller' => 'users', 'action' => 'setForgotPassword'));			} else {				$this->Session->setFlash('Password is not changed .Please try again.', 'default', array('class' => 'errorsmessage'));				$this->redirect(array('controller' => 'users', 'action' => 'setForgotPassword'));			}		}	}	function getrandomstr() {		$length = 10;		$characters = "0123456789abcdefghijklmnopqrstuvwxyz";		$string = "";		for ($p = 0; $p < $length; $p++) {			@$string .= $characters[mt_rand(0, strlen($characters))];		}		return $string;	}   }	?>	