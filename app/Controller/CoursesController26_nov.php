<?phpclass CoursesController extends AppController{	var $uses = array('Course','Sector','Location','TransactionLog');	var $components = array('Auth', 'Session', 'Email', 'RequestHandler');	function beforeFilter() {		parent::beforeFilter();		$this->Auth->allow('railway_safety','construction','plant_operation','small_tools','health_safety',		'booknow','upcomingcourse','pre_requisite','preRequisite','mycourse','drug_medical');	}		function admin_addCourse(){		$this->layout="admin";		$SectorName = $this->Sector->find('all');		$location = $this->Location->find('all');		$this->set(compact('SectorName','location'));		if(!empty($this->request->data)){             if($this->Course->save($this->data)){				$this->Session->setFlash("Course has been added successfully");				$this->redirect(array('controller'=>'courses','action'=>'admin_courseList'));              }        }	}	function admin_courseList(){		$this->layout="admin";		$order = array('Course.id'=>'DESC');		  $this->paginate = array(			'order' => $order,			'limit' => 10		);		$courseList = $this->paginate('Course');		//pr($courseList);die;		$this->set(compact('courseList'));	}		 	function admin_editCourse($id=NULL){		$this->layout="admin";		 $courseDetail = $this->Course->find('first', array('conditions' => array('Course.id' => $id)));		 $secDetail = $this->Sector->find('all');		 $location = $this->Location->find('all');		 $this->set(compact('courseDetail','secDetail','location'));		$this->Course->id = $id;			if (!empty($this->request->data)) {				$this->Course->id = $id;				if ($this->Course->save($this->data)) {					$this->Session->setFlash('Content has been updated successfully.', 'default', array('class' => 'success'));					$this->redirect(array('controller' => 'courses', 'action' => 'admin_courseList'));				}			}	}	 function admin_viewCourse($id=NULL){		$this->layout ="admin";		$courseView = $this->Course->find('first',array('conditions'=>array('Course.id'=>$id)));		$this->set(compact('courseView'));		//pr($courseView); die;	 }	 function admin_deleteCourse($id = NULL) {		$this->autoRender = FALSE;		if ($this->Course->delete($id)) {			$this->Session->setFlash('You have successfully deleted course');			$this->redirect(array('controller' => 'courses', 'action' => 'admin_courseList'));		}	}		function railway_safety(){		$this->layout="Home";			$location = $this->Location->find('all');		$course = $this->Course->find('all',array('conditions'=>array('Course.sector_id' => "1"),'order'=> array('Course.course_name'=> 'ASC')));		$getvalue = array();		$getvalue = $_GET;		$filterval = array_filter($getvalue);		$result = array();			foreach($filterval as $key => $val){						$result['Course' . '.' . $key] = $val;             				}				if(!empty($filterval)){					$conditions = $result;				}else{					$conditions = array('Course.sector_id' => "1");				}						$order = array('Course.course_name'=> 'ASC');		$this->paginate = array(			'conditions' => $conditions,			'order'		=> $order,			'limit' => 10		);		$list =  $this->paginate('Course');		$count = $this->Course->find('count',array('conditions' => $conditions));		//pr($getvalue); die;		$this->set(compact('list','getvalue','location','count','course'));		return $course;	}	function construction(){		$this->layout="Home";		$location = $this->Location->find('all');				$course = $this->Course->find('all',array('conditions'=>array('Course.sector_id' => "2"),'order'=> array('Course.course_name'=> 'ASC')));		$getvalue = array();		$getvalue = $_GET;		//pr($getvalue); die;		$filterval = array_filter($getvalue);	  		$result = array();			foreach($filterval as $key => $val){						$result['Course' . '.' . $key] = $val;             				}				if(!empty($filterval)){					$conditions = $result;				}else{					$conditions = array('Course.sector_id' => "2");				}						$order = array('Course.course_name'=> 'ASC');		$this->paginate = array(			'conditions' => $conditions,			'order'		=> $order,			'limit' => 10		);		$list =  $this->paginate('Course');		$count = $this->Course->find('count',array('conditions' => $conditions));		//pr($count); die;		$this->set(compact('list','getvalue','location' ,'count','course'));		return $course;	}	function plant_operation(){		$this->layout="Home";		$location = $this->Location->find('all');				$course = $this->Course->find('all',array('conditions'=>array('Course.sector_id' => "3"),'order'=> array('Course.course_name'=> 'ASC')));		$getvalue = array();		$getvalue = $_GET;		//pr($getvalue); die;		$filterval = array_filter($getvalue);	  		$result = array();			foreach($filterval as $key => $val){						$result['Course' . '.' . $key] = $val;             				}				if(!empty($filterval)){					$conditions = $result;				}else{					$conditions = array('Course.sector_id' => "3");				}						$order = array('Course.course_name'=> 'ASC');		$this->paginate = array(			'conditions' => $conditions,			'order'		=> $order,			'limit' => 10		);		$list =  $this->paginate('Course');		$count = $this->Course->find('count',array('conditions' => $conditions));		//pr($count); die;		$this->set(compact('list','getvalue','location','count','course'));		return $course;	}	function small_tools(){		$this->layout="Home";				$location = $this->Location->find('all');		$course = $this->Course->find('all',array('conditions'=>array('Course.sector_id' => "4"),'order'=> array('Course.course_name'=> 'ASC')));		$getvalue = array();		$getvalue = $_GET;		//pr($getvalue); die;		$filterval = array_filter($getvalue);	  		$result = array();			foreach($filterval as $key => $val){						$result['Course' . '.' . $key] = $val;             				}				if(!empty($filterval)){					$conditions = $result;				}else{					$conditions = array('Course.sector_id' => "4");				}						$order = array('Course.course_name'=> 'ASC');		$this->paginate = array(			'conditions' => $conditions,			'order'		=> $order,			'limit' => 10		);		$list =  $this->paginate('Course');		$count = $this->Course->find('count',array('conditions' => $conditions));		//pr($count); die;		$this->set(compact('list','getvalue','location','count','course'));		return $course;	}	function health_safety(){		$this->layout="Home";		$location = $this->Location->find('all');		$course = $this->Course->find('all',array('conditions'=>array('Course.sector_id' => "5"),'order'=> array('Course.course_name'=> 'ASC')));		$getvalue = array();		$getvalue = $_GET;		//pr($getvalue); die;		$filterval = array_filter($getvalue);	  		$result = array();			foreach($filterval as $key => $val){						$result['Course' . '.' . $key] = $val;             				}				if(!empty($filterval)){					$conditions = $result;				}else{					$conditions = array('Course.sector_id' => "5");				}						$order = array('Course.course_name'=> 'ASC');		$this->paginate = array(			'conditions' => $conditions,			'order'		=> $order,			'limit' => 10		);		$list =  $this->paginate('Course');		$count = $this->Course->find('count',array('conditions' => $conditions));		//pr($count); die;		$this->set(compact('list','getvalue','location','count','course'));		return $course;	}	function booknow(){		$this->layout="Home";		$course = $this->Course->find('all',array('order'=> array('Course.course_name'=> 'ASC')));		$location = $this->Location->find('all');		$getvalue = array();		$getvalue = $_GET;		//pr($getvalue); die;		$filterval = array_filter($getvalue);		//pr($filterval); die;		$result = array();			foreach($filterval as $key => $val){						$result['Course' . '.' . $key] = $val;             				}				if(!empty($filterval)){					$conditions = $result;				}else{					$conditions = "";				}						$order = array('Course.course_name'=> 'ASC');		$this->paginate = array(		'conditions' => $conditions,	 	'order'		=> $order,		'limit'		=>	10		);		$list =  $this->paginate('Course');		//$list = $this->Course->find('all',array('conditions' => $conditions));		$count = $this->Course->find('count');		//pr($count); die;		$this->set(compact('list','getvalue','location','count','course'));		return $course;	}	  /*    function getnewcourseajax() {        $sectorId = $this->data['sectorId'];		$data = $this->Course->find('all',array('fields'=>'start_date'), array('conditions' => array('Course.sector_id'=>$sectorId)));        //pr ($data) ; die;	    $start = date('d-m-Y',strtotime("now"));		//echo $start;        $conditions = array('Course.start_date >' =>$start,'Course.sector_id'=>$sectorId );        $course = $this->Course->find('all', array('conditions' =>  $conditions));		//pr($course); die;        //$this->set(compact('course'));		return $course;	 }	*/		function pre_requisite(){		$data = " Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut 			labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris 			nisi ut aliquip ex ea commodo consequat.";			//echo $data;			return $data;							} 	function upcomingcourse(){		//echo $_SERVER[ 'REQUEST_URI' ];		$start = date('d-m-Y',strtotime("now"));		if(($_SERVER[ 'REQUEST_URI' ])=="/TechnoCTA/Construction/Code/courses/railway_safety" ){        $conditions = array('Course.start_date >' =>$start,'Course.sector_id'=> 1);        $course = $this->Course->find('all', array('conditions' =>  $conditions));		}else if(($_SERVER[ 'REQUEST_URI' ])=="/TechnoCTA/Construction/Code/courses/construction"){		$conditions = array('Course.start_date >' =>$start,'Course.sector_id'=> 2);        $course = $this->Course->find('all', array('conditions' =>  $conditions));		}else if(($_SERVER[ 'REQUEST_URI' ])=="/TechnoCTA/Construction/Code/courses/plant_operation"){		$conditions = array('Course.start_date >' =>$start,'Course.sector_id'=> 3);        $course = $this->Course->find('all', array('conditions' =>  $conditions));		}else if(($_SERVER[ 'REQUEST_URI' ])=="/TechnoCTA/Construction/Code/courses/small_tools"){		$conditions = array('Course.start_date >' =>$start,'Course.sector_id'=> 4);        $course = $this->Course->find('all', array('conditions' =>  $conditions));		}else if(($_SERVER[ 'REQUEST_URI' ])=="/TechnoCTA/Construction/Code/courses/health_safety"){		$conditions = array('Course.start_date >' =>$start,'Course.sector_id'=> 5);        $course = $this->Course->find('all', array('conditions' =>  $conditions));		}		return $course;	}		function preRequisite($id=NULL){		$this->layout ="Home";		$detail = $this->Course->find('first',array('conditions'=>array('Course.id' => $id)));		//pr($detail); die;		$this->set(compact('detail'));	}		function mycourse(){		$this->layout ="Home";		$user_id = $this->Auth->user('id');		//pr($user_id); die;		$course =  $this->TransactionLog->find('all', array('conditions' => array('User.id' => $user_id)));		//pr($course); die;		$this->set(compact('course'));	}		function admin_bookedcourse($id =NUll){		$this->layout ="admin";		//pr($id); die;		$course =  $this->TransactionLog->find('all', array('conditions' => array('User.id' => $id)));		foreach($course as $result){		$no = $result['User']['sentinel'];		 $num = explode(",", $no);		}		/* foreach($course as $result){		$name = $result['User']['first_name'];		 $name1 = explode(",", $name);		}		$count = Count($name1); */		//pr($count); die;		$this->set(compact('course','num'));	}		function drug_medical(){		$this->layout="Home";				$location = $this->Location->find('all');		$course = $this->Course->find('all',array('conditions'=>array('Course.sector_id' => "6"),'order'=> array('Course.course_name'=> 'ASC')));		$getvalue = array();		$getvalue = $_GET;		//pr($getvalue); die;		$filterval = array_filter($getvalue);	  		$result = array();			foreach($filterval as $key => $val){						$result['Course' . '.' . $key] = $val;             				}				if(!empty($filterval)){					$conditions = $result;				}else{					$conditions = array('Course.sector_id' => "6");				}						$order = array('Course.course_name'=> 'ASC');		$this->paginate = array(			'conditions' => $conditions,			'order'		=> $order,			'limit' => 10		);		$list =  $this->paginate('Course');		$count = $this->Course->find('count',array('conditions' => $conditions));		//pr($count); die;		$this->set(compact('list','getvalue','location','count','course'));		return $course;	}}